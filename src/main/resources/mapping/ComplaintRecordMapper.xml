<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.upc.dao.ComplaintRecordMapper">
    <resultMap id="BaseResultMap" type="com.example.upc.dataobject.ComplaintRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="record_person" jdbcType="VARCHAR" property="recordPerson"/>
        <result column="record_dept" jdbcType="INTEGER" property="recordDept"/>
        <result column="record_number" jdbcType="VARCHAR" property="recordNumber"/>
        <result column="record" jdbcType="VARCHAR" property="record"/>
        <result column="incoming_time" jdbcType="TIMESTAMP" property="incomingTime"/>
        <result column="dead_time" jdbcType="VARCHAR" property="deadTime"/>
        <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime"/>
        <result column="incoming_type" jdbcType="VARCHAR" property="incomingType"/>
        <result column="information_type" jdbcType="VARCHAR" property="informationType"/>
        <result column="emergency_type" jdbcType="VARCHAR" property="emergencyType"/>
        <result column="complaint_person" jdbcType="VARCHAR" property="complaintPerson"/>
        <result column="contact" jdbcType="VARCHAR" property="contact"/>
        <result column="secrecy" jdbcType="VARCHAR" property="secrecy"/>
        <result column="reply" jdbcType="VARCHAR" property="reply"/>
        <result column="enterprise" jdbcType="VARCHAR" property="enterprise"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="problem_one" jdbcType="VARCHAR" property="problemOne"/>
        <result column="problem_two" jdbcType="VARCHAR" property="problemTwo"/>
        <result column="incoming_content" jdbcType="VARCHAR" property="incomingContent"/>
        <result column="suggestion" jdbcType="VARCHAR" property="suggestion"/>
        <result column="step" jdbcType="INTEGER" property="step"/>
        <result column="dept" jdbcType="INTEGER" property="dept"/>
        <result column="leader" jdbcType="INTEGER" property="leader"/>
        <result column="instruct_time" jdbcType="TIMESTAMP" property="instructTime"/>
        <result column="instruction" jdbcType="VARCHAR" property="instruction"/>
        <result column="result" jdbcType="VARCHAR" property="result"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="state_ex" jdbcType="INTEGER" property="stateEx"/>
        <result column="ok_time" jdbcType="TIMESTAMP" property="okTime"/>
        <result column="document" jdbcType="VARCHAR" property="document"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="operator_ip" jdbcType="VARCHAR" property="operatorIp"/>
        <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapParam" type="com.example.upc.controller.param.ComplaintRecordParam">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 29 10:58:28 CST 2019.
        -->
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
        <result column="leader_name" jdbcType="VARCHAR" property="leaderName"/>
    </resultMap>

    <resultMap id="ResultMapListParam" type="com.example.upc.controller.param.ComplaintRecordListParam">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Apr 29 10:58:28 CST 2019.
        -->
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="number" jdbcType="INTEGER" property="number"/>
    </resultMap>


    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        id, record_person, record_dept, record_number, record, incoming_time, dead_time,
        finish_time, incoming_type, information_type, emergency_type, complaint_person, contact,
        secrecy, reply, enterprise, area, address, problem_one, problem_two, incoming_content,
        suggestion, step, dept, leader, instruct_time, instruction, result, state, state_ex,
        ok_time, document, operator, operator_ip, operator_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        select
        <include refid="Base_Column_List"/>
        from complaint_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        delete from complaint_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.upc.dataobject.ComplaintRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        insert into complaint_record (id, record_person, record_dept,
        record_number, record, incoming_time,
        dead_time, finish_time, incoming_type,
        information_type, emergency_type, complaint_person,
        contact, secrecy, reply,
        enterprise, area, address,
        problem_one, problem_two, incoming_content,
        suggestion, step, dept,
        leader, instruct_time, instruction,
        result, state, state_ex,
        ok_time, document, operator,
        operator_ip, operator_time)
        values (#{id,jdbcType=INTEGER}, #{recordPerson,jdbcType=VARCHAR}, #{recordDept,jdbcType=INTEGER},
        #{recordNumber,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}, #{incomingTime,jdbcType=TIMESTAMP},
        #{deadTime,jdbcType=VARCHAR}, #{finishTime,jdbcType=TIMESTAMP}, #{incomingType,jdbcType=VARCHAR},
        #{informationType,jdbcType=VARCHAR}, #{emergencyType,jdbcType=VARCHAR}, #{complaintPerson,jdbcType=VARCHAR},
        #{contact,jdbcType=VARCHAR}, #{secrecy,jdbcType=VARCHAR}, #{reply,jdbcType=VARCHAR},
        #{enterprise,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{problemOne,jdbcType=VARCHAR}, #{problemTwo,jdbcType=VARCHAR}, #{incomingContent,jdbcType=VARCHAR},
        #{suggestion,jdbcType=VARCHAR}, #{step,jdbcType=INTEGER}, #{dept,jdbcType=INTEGER},
        #{leader,jdbcType=INTEGER}, #{instructTime,jdbcType=TIMESTAMP}, #{instruction,jdbcType=VARCHAR},
        #{result,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{stateEx,jdbcType=INTEGER},
        #{okTime,jdbcType=TIMESTAMP}, #{document,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR},
        #{operatorIp,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.example.upc.dataobject.ComplaintRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        insert into complaint_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="recordPerson != null">
                record_person,
            </if>
            <if test="recordDept != null">
                record_dept,
            </if>
            <if test="recordNumber != null">
                record_number,
            </if>
            <if test="record != null">
                record,
            </if>
            <if test="incomingTime != null">
                incoming_time,
            </if>
            <if test="deadTime != null">
                dead_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="incomingType != null">
                incoming_type,
            </if>
            <if test="informationType != null">
                information_type,
            </if>
            <if test="emergencyType != null">
                emergency_type,
            </if>
            <if test="complaintPerson != null">
                complaint_person,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="secrecy != null">
                secrecy,
            </if>
            <if test="reply != null">
                reply,
            </if>
            <if test="enterprise != null">
                enterprise,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="problemOne != null">
                problem_one,
            </if>
            <if test="problemTwo != null">
                problem_two,
            </if>
            <if test="incomingContent != null">
                incoming_content,
            </if>
            <if test="suggestion != null">
                suggestion,
            </if>
            <if test="step != null">
                step,
            </if>
            <if test="dept != null">
                dept,
            </if>
            <if test="leader != null">
                leader,
            </if>
            <if test="instructTime != null">
                instruct_time,
            </if>
            <if test="instruction != null">
                instruction,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="stateEx != null">
                state_ex,
            </if>
            <if test="okTime != null">
                ok_time,
            </if>
            <if test="document != null">
                document,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="operatorIp != null">
                operator_ip,
            </if>
            <if test="operatorTime != null">
                operator_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="recordPerson != null">
                #{recordPerson,jdbcType=VARCHAR},
            </if>
            <if test="recordDept != null">
                #{recordDept,jdbcType=INTEGER},
            </if>
            <if test="recordNumber != null">
                #{recordNumber,jdbcType=VARCHAR},
            </if>
            <if test="record != null">
                #{record,jdbcType=VARCHAR},
            </if>
            <if test="incomingTime != null">
                #{incomingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deadTime != null">
                #{deadTime,jdbcType=VARCHAR},
            </if>
            <if test="finishTime != null">
                #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="incomingType != null">
                #{incomingType,jdbcType=VARCHAR},
            </if>
            <if test="informationType != null">
                #{informationType,jdbcType=VARCHAR},
            </if>
            <if test="emergencyType != null">
                #{emergencyType,jdbcType=VARCHAR},
            </if>
            <if test="complaintPerson != null">
                #{complaintPerson,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="secrecy != null">
                #{secrecy,jdbcType=VARCHAR},
            </if>
            <if test="reply != null">
                #{reply,jdbcType=VARCHAR},
            </if>
            <if test="enterprise != null">
                #{enterprise,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="problemOne != null">
                #{problemOne,jdbcType=VARCHAR},
            </if>
            <if test="problemTwo != null">
                #{problemTwo,jdbcType=VARCHAR},
            </if>
            <if test="incomingContent != null">
                #{incomingContent,jdbcType=VARCHAR},
            </if>
            <if test="suggestion != null">
                #{suggestion,jdbcType=VARCHAR},
            </if>
            <if test="step != null">
                #{step,jdbcType=INTEGER},
            </if>
            <if test="dept != null">
                #{dept,jdbcType=INTEGER},
            </if>
            <if test="leader != null">
                #{leader,jdbcType=INTEGER},
            </if>
            <if test="instructTime != null">
                #{instructTime,jdbcType=TIMESTAMP},
            </if>
            <if test="instruction != null">
                #{instruction,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                #{result,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="stateEx != null">
                #{stateEx,jdbcType=INTEGER},
            </if>
            <if test="okTime != null">
                #{okTime,jdbcType=TIMESTAMP},
            </if>
            <if test="document != null">
                #{document,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operatorIp != null">
                #{operatorIp,jdbcType=VARCHAR},
            </if>
            <if test="operatorTime != null">
                #{operatorTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.upc.dataobject.ComplaintRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        update complaint_record
        <set>
            <if test="recordPerson != null">
                record_person = #{recordPerson,jdbcType=VARCHAR},
            </if>
            <if test="recordDept != null">
                record_dept = #{recordDept,jdbcType=INTEGER},
            </if>
            <if test="recordNumber != null">
                record_number = #{recordNumber,jdbcType=VARCHAR},
            </if>
            <if test="record != null">
                record = #{record,jdbcType=VARCHAR},
            </if>
            <if test="incomingTime != null">
                incoming_time = #{incomingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deadTime != null">
                dead_time = #{deadTime,jdbcType=VARCHAR},
            </if>
            <if test="finishTime != null">
                finish_time = #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="incomingType != null">
                incoming_type = #{incomingType,jdbcType=VARCHAR},
            </if>
            <if test="informationType != null">
                information_type = #{informationType,jdbcType=VARCHAR},
            </if>
            <if test="emergencyType != null">
                emergency_type = #{emergencyType,jdbcType=VARCHAR},
            </if>
            <if test="complaintPerson != null">
                complaint_person = #{complaintPerson,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="secrecy != null">
                secrecy = #{secrecy,jdbcType=VARCHAR},
            </if>
            <if test="reply != null">
                reply = #{reply,jdbcType=VARCHAR},
            </if>
            <if test="enterprise != null">
                enterprise = #{enterprise,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="problemOne != null">
                problem_one = #{problemOne,jdbcType=VARCHAR},
            </if>
            <if test="problemTwo != null">
                problem_two = #{problemTwo,jdbcType=VARCHAR},
            </if>
            <if test="incomingContent != null">
                incoming_content = #{incomingContent,jdbcType=VARCHAR},
            </if>
            <if test="suggestion != null">
                suggestion = #{suggestion,jdbcType=VARCHAR},
            </if>
            <if test="step != null">
                step = #{step,jdbcType=INTEGER},
            </if>
            <if test="dept != null">
                dept = #{dept,jdbcType=INTEGER},
            </if>
            <if test="leader != null">
                leader = #{leader,jdbcType=INTEGER},
            </if>
            <if test="instructTime != null">
                instruct_time = #{instructTime,jdbcType=TIMESTAMP},
            </if>
            <if test="instruction != null">
                instruction = #{instruction,jdbcType=VARCHAR},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="stateEx != null">
                state_ex = #{stateEx,jdbcType=INTEGER},
            </if>
            <if test="okTime != null">
                ok_time = #{okTime,jdbcType=TIMESTAMP},
            </if>
            <if test="document != null">
                document = #{document,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="operatorIp != null">
                operator_ip = #{operatorIp,jdbcType=VARCHAR},
            </if>
            <if test="operatorTime != null">
                operator_time = #{operatorTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.upc.dataobject.ComplaintRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 15 21:56:04 CST 2019.
        -->
        update complaint_record
        set record_person = #{recordPerson,jdbcType=VARCHAR},
        record_dept = #{recordDept,jdbcType=INTEGER},
        record_number = #{recordNumber,jdbcType=VARCHAR},
        record = #{record,jdbcType=VARCHAR},
        incoming_time = #{incomingTime,jdbcType=TIMESTAMP},
        dead_time = #{deadTime,jdbcType=VARCHAR},
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
        incoming_type = #{incomingType,jdbcType=VARCHAR},
        information_type = #{informationType,jdbcType=VARCHAR},
        emergency_type = #{emergencyType,jdbcType=VARCHAR},
        complaint_person = #{complaintPerson,jdbcType=VARCHAR},
        contact = #{contact,jdbcType=VARCHAR},
        secrecy = #{secrecy,jdbcType=VARCHAR},
        reply = #{reply,jdbcType=VARCHAR},
        enterprise = #{enterprise,jdbcType=VARCHAR},
        area = #{area,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        problem_one = #{problemOne,jdbcType=VARCHAR},
        problem_two = #{problemTwo,jdbcType=VARCHAR},
        incoming_content = #{incomingContent,jdbcType=VARCHAR},
        suggestion = #{suggestion,jdbcType=VARCHAR},
        step = #{step,jdbcType=INTEGER},
        dept = #{dept,jdbcType=INTEGER},
        leader = #{leader,jdbcType=INTEGER},
        instruct_time = #{instructTime,jdbcType=TIMESTAMP},
        instruction = #{instruction,jdbcType=VARCHAR},
        result = #{result,jdbcType=VARCHAR},
        state = #{state,jdbcType=INTEGER},
        state_ex = #{stateEx,jdbcType=INTEGER},
        ok_time = #{okTime,jdbcType=TIMESTAMP},
        document = #{document,jdbcType=VARCHAR},
        operator = #{operator,jdbcType=VARCHAR},
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
        operator_time = #{operatorTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="countList" resultType="int">
        select count(1)
        from
        (select a.*,b.name as dept_name from
        (select a.*,b.name as leader_name
        from
        (SELECT *
        FROM complaint_record
        where step =1 and dept = #{dept}
        union
        SELECT *
        FROM complaint_record
        where step =2 and record_dept = #{recordDept}
        union
        SELECT *
        FROM complaint_record
        where step =3 and leader = #{leader}
        union
        SELECT *
        FROM complaint_record
        where step =3 and dept = #{dept} and state = 4
        union
        SELECT *
        FROM complaint_record
        where record_person=#{recordPerson}
        order by id desc) as a left join supervision_ga as b on a.leader = b.id)as a left join sys_dept as b on a.dept =
        b.id) as a
        where 1=1
        <if test="search.number != null and search.number != ''">AND a.record_number LIKE
            CONCAT('%',#{search.number},'%')
        </if>
        <if test="search.problemTwo != null and search.problemTwo != ''">AND a.problem_two LIKE
            CONCAT('%',#{search.problemTwo},'%')
        </if>
        <if test="search.information != null and search.information != ''">AND a.information_type LIKE
            CONCAT('%',#{search.information},'%')
        </if>
        <if test="search.complaintPerson != null and search.complaintPerson != ''">AND a.complaint_person LIKE
            CONCAT('%',#{search.complaintPerson},'%')
        </if>
        <if test="search.enterpriseName != null and search.enterpriseName != ''">AND a.enterprise LIKE
            CONCAT('%',#{search.enterpriseName},'%')
        </if>
        <if test="search.start1 != null">AND a.incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND a.incoming_time &lt;= #{search.end1}</if>
        <if test="search.department != null and search.department != ''">AND a.dept_name LIKE
            CONCAT('%',#{search.department},'%')
        </if>
        <if test="search.state != null and search.state != ''">AND a.state_ex = #{search.state}</if>

    </select>

    <select id="getPage" resultMap="ResultMapParam">
        select * from (select a.*,b.name as dept_name from
        (select a.*,b.name as leader_name
        from
        (SELECT *
        FROM complaint_record
        where step =1 and dept = #{dept}
        union
        SELECT *
        FROM complaint_record
        where step =2 and record_dept = #{recordDept}
        union
        SELECT *
        FROM complaint_record
        where step =3 and leader = #{leader}
        union
        SELECT *
        FROM complaint_record
        where step =3 and dept = #{dept} and state = 4
        union
        SELECT *
        FROM complaint_record
        where record_person=#{recordPerson}
        order by id desc) as a left join supervision_ga as b on a.leader = b.id)as a left join sys_dept as b on a.dept =
        b.id)as a
        where 1=1
        <if test="search.number != null and search.number != ''">AND a.record_number LIKE
            CONCAT('%',#{search.number},'%')
        </if>
        <if test="search.problemTwo != null and search.problemTwo != ''">AND a.problem_two LIKE
            CONCAT('%',#{search.problemTwo},'%')
        </if>
        <if test="search.information != null and search.information != ''">AND a.information_type LIKE
            CONCAT('%',#{search.information},'%')
        </if>
        <if test="search.complaintPerson != null and search.complaintPerson != ''">AND a.complaint_person LIKE
            CONCAT('%',#{search.complaintPerson},'%')
        </if>
        <if test="search.enterpriseName != null and search.enterpriseName != ''">AND a.enterprise LIKE
            CONCAT('%',#{search.enterpriseName},'%')
        </if>
        <if test="search.start1 != null">AND a.incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND a.incoming_time &lt;= #{search.end1}</if>
        <if test="search.department != null and search.department != ''">AND a.dept_name LIKE
            CONCAT('%',#{search.department},'%')
        </if>
        <if test="search.state != null and search.state != ''">AND a.state_ex = #{search.state}</if>
        limit #{page.offset}, #{page.pageSize}
    </select>


    <select id="countListAdmin" resultType="int">
        select count(1)
        from
        (select a.*,b.name as dept_name from
        (select a.*,b.name as leader_name
        FROM complaint_record as a left join supervision_ga as b on a.leader = b.id)as a left join sys_dept as b on
        a.dept = b.id) as a
        where 1=1
        <if test="search.number != null and search.number != ''">AND a.record_number LIKE
            CONCAT('%',#{search.number},'%')
        </if>
        <if test="search.problemTwo != null and search.problemTwo != ''">AND a.problem_two LIKE
            CONCAT('%',#{search.problemTwo},'%')
        </if>
        <if test="search.information != null and search.information != ''">AND a.information_type LIKE
            CONCAT('%',#{search.information},'%')
        </if>
        <if test="search.complaintPerson != null and search.complaintPerson != ''">AND a.complaint_person LIKE
            CONCAT('%',#{search.complaintPerson},'%')
        </if>
        <if test="search.enterpriseName != null and search.enterpriseName != ''">AND a.enterprise LIKE
            CONCAT('%',#{search.enterpriseName},'%')
        </if>
        <if test="search.start1 != null">AND a.incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND a.incoming_time &lt;= #{search.end1}</if>
        <if test="search.department != null and search.department != ''">AND a.dept_name LIKE
            CONCAT('%',#{search.department},'%')
        </if>
        <if test="search.state != null and search.state != ''">AND a.state_ex = #{search.state}</if>
    </select>

    <select id="getPageAdmin" resultMap="ResultMapParam">
        select * from
        (select a.*,b.name as dept_name from
        (select a.*,b.name as leader_name
        FROM complaint_record as a left join supervision_ga as b on a.leader = b.id)as a left join sys_dept as b on
        a.dept = b.id) as a
        where 1=1
        <if test="search.number != null and search.number != ''">AND a.record_number LIKE
            CONCAT('%',#{search.number},'%')
        </if>
        <if test="search.problemTwo != null and search.problemTwo != ''">AND a.problem_two LIKE
            CONCAT('%',#{search.problemTwo},'%')
        </if>
        <if test="search.information != null and search.information != ''">AND a.information_type LIKE
            CONCAT('%',#{search.information},'%')
        </if>
        <if test="search.complaintPerson != null and search.complaintPerson != ''">AND a.complaint_person LIKE
            CONCAT('%',#{search.complaintPerson},'%')
        </if>
        <if test="search.enterpriseName != null and search.enterpriseName != ''">AND a.enterprise LIKE
            CONCAT('%',#{search.enterpriseName},'%')
        </if>
        <if test="search.start1 != null">AND a.incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND a.incoming_time &lt;= #{search.end1}</if>
        <if test="search.department != null and search.department != ''">AND a.dept_name LIKE
            CONCAT('%',#{search.department},'%')
        </if>
        <if test="search.state != null and search.state != ''">AND a.state_ex = #{search.state}</if>
        order by id DESC
        limit #{page.offset}, #{page.pageSize}
    </select>


    <select id="getListTypeNumberByDate" parameterType="map" resultMap="ResultMapListParam">
        select incoming_type as type,count(1) as number
        from complaint_record
        where state = 2
        <if test="search.start1 != null">AND incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND incoming_time &lt;= #{search.end1}</if>
        GROUP BY incoming_type
    </select>

    <select id="getListTypeNumberByDateStep" parameterType="map" resultMap="ResultMapListParam">
        select problem_one as type,count(1) as number
        from complaint_record
        where state = 2
        <if test="search.start1 != null">AND incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND incoming_time &lt;= #{search.end1}</if>
        GROUP BY problem_one
    </select>

    <select id="countAllTotal" parameterType="map" resultType="int">
        select count(1)
        from complaint_record
        where state = 2
        <if test="search.start1 != null">AND incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND incoming_time &lt;= #{search.end1}</if>
    </select>

    <select id="getListTypeNumberByDateDept" parameterType="map" resultMap="ResultMapListParam">
        SELECT a.number as number,b.name as type
        from
        (select dept as dept,count(1) as number from complaint_record where state = 2 and dept != 0

        <if test="search.start1 != null">AND incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND incoming_time &lt;= #{search.end1}</if>

        GROUP BY dept)
        as a left join sys_dept as b
        on a.dept = b.id
    </select>

    <select id="countDeptTotal" parameterType="map" resultType="int">
        select count(1)
        from complaint_record
        where state = 2 and dept != 0
        <if test="search.start1 != null">AND incoming_time &gt;= #{search.start1}</if>
        <if test="search.end1 != null">AND incoming_time &lt;= #{search.end1}</if>
    </select>

    <select id="getListTypeNumberAll" resultMap="ResultMapListParam">
        select incoming_type as type, count(1) as number
        from complaint_record
        where state = 2
        GROUP BY incoming_type
    </select>

    <select id="countTotalAll" resultType="int">
        select count(1)
        from complaint_record
        where state = 2
    </select>

    <select id="getRecordById" resultMap="BaseResultMap">
        select *
        from complaint_record
        where id = #{id}
    </select>

</mapper>