<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.upc.dao.InspectClauseConfMapper">
  <resultMap id="BaseResultMap" type="com.example.upc.dataobject.InspectClauseConf">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="large_class" jdbcType="INTEGER" property="largeClass" />
    <result column="seq" jdbcType="VARCHAR" property="seq" />
    <result column="clause_name" jdbcType="VARCHAR" property="clauseName" />
    <result column="score" jdbcType="REAL" property="score" />
    <result column="importance" jdbcType="INTEGER" property="importance" />
    <result column="legal_basis" jdbcType="VARCHAR" property="legalBasis" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    id, large_class, seq, clause_name, score, importance, legal_basis, remark, operator, 
    operate_time, operate_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from inspect_clause_conf
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    delete from inspect_clause_conf
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.upc.dataobject.InspectClauseConf">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    insert into inspect_clause_conf (id, large_class, seq, 
      clause_name, score, importance, 
      legal_basis, remark, operator, 
      operate_time, operate_ip)
    values (#{id,jdbcType=INTEGER}, #{largeClass,jdbcType=INTEGER}, #{seq,jdbcType=VARCHAR}, 
      #{clauseName,jdbcType=VARCHAR}, #{score,jdbcType=REAL}, #{importance,jdbcType=INTEGER}, 
      #{legalBasis,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.upc.dataobject.InspectClauseConf">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    insert into inspect_clause_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="largeClass != null">
        large_class,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="clauseName != null">
        clause_name,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="importance != null">
        importance,
      </if>
      <if test="legalBasis != null">
        legal_basis,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="largeClass != null">
        #{largeClass,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=VARCHAR},
      </if>
      <if test="clauseName != null">
        #{clauseName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
      <if test="importance != null">
        #{importance,jdbcType=INTEGER},
      </if>
      <if test="legalBasis != null">
        #{legalBasis,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.upc.dataobject.InspectClauseConf">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    update inspect_clause_conf
    <set>
      <if test="largeClass != null">
        large_class = #{largeClass,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=VARCHAR},
      </if>
      <if test="clauseName != null">
        clause_name = #{clauseName,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
      <if test="importance != null">
        importance = #{importance,jdbcType=INTEGER},
      </if>
      <if test="legalBasis != null">
        legal_basis = #{legalBasis,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.upc.dataobject.InspectClauseConf">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Oct 25 10:30:19 CST 2019.
    -->
    update inspect_clause_conf
    set large_class = #{largeClass,jdbcType=INTEGER},
      seq = #{seq,jdbcType=VARCHAR},
      clause_name = #{clauseName,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      importance = #{importance,jdbcType=INTEGER},
      legal_basis = #{legalBasis,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap extends="BaseResultMap" id="ResultMapParam" type="com.example.upc.controller.param.InspectClauseConfParam">
    <result column="industry" jdbcType="INTEGER" property="industry" />
    <result column="large_class_name" jdbcType="VARCHAR" property="largeClassName" />
    <result column="industry_name" jdbcType="VARCHAR" property="industryName" />
    <result column="check_item" jdbcType="VARCHAR" property="checkItem" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultListParam" type="com.example.upc.controller.param.InspectDailyClauseParam">
    <result column="large_class_id" jdbcType="INTEGER" property="largeClassId" />
    <result column="large_class_name" jdbcType="VARCHAR" property="largeClassName" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="result_remark" jdbcType="VARCHAR" property="resultRemark" />
    <result column="document" jdbcType="LONGVARCHAR" property="document" />
  </resultMap>

  <select id="countList" resultType="int">
    SELECT count(1)
    FROM inspect_clause_conf
  </select>

  <select id="getPage" resultMap="ResultMapParam">
    SELECT a.*,b.name as industry_name  FROM
                                          (SELECT a.*,b.industry as industry,b.name as large_class_name,b.checkItem as check_item FROM
                                            inspect_clause_conf as a LEFT JOIN
                                              inspect_large_conf as b  on a.large_class=b.id limit #{page.offset}, #{page.pageSize}) as a LEFT JOIN
                                                sys_industry as b on a.industry=b.id
  </select>
  <select id="getList" parameterType="java.lang.Integer" resultMap="ResultListParam">
   SELECT a.*,b.result as result,b.remark as result_remark,b.document as document FROM
      (SELECT a.*,b.id as  large_class_id,b.name as large_class_name FROM
        inspect_clause_conf as a LEFT JOIN inspect_large_conf as b on a.large_class = b.id
       WHERE b.industry = #{industryId,jdbcType=INTEGER}
         ORDER BY a.seq) as a LEFT JOIN
          inspect_daily_clause as b on a.id=b.inspect_clause_conf AND
            b.inspect_daily_food = #{id,jdbcType=INTEGER}
  </select>

  <select id="getEmptyList" parameterType="java.lang.Integer" resultMap="ResultListParam">
   SELECT a.*,b.result as result,b.remark as result_remark,b.document as document FROM
      (SELECT a.*,b.id as  large_class_id,b.name as large_class_name FROM
        inspect_clause_conf as a LEFT JOIN inspect_large_conf as b on a.large_class = b.id
       WHERE b.industry = #{industryId,jdbcType=INTEGER}
         ORDER BY a.seq) as a LEFT JOIN
          inspect_daily_clause as b on a.id=b.inspect_clause_conf AND
            b.inspect_daily_food = 0
  </select>

  <select id="countByName" resultType="int">
    SELECT count(1)
    FROM inspect_clause_conf
    WHERE clause_name = #{clauseName}
      AND large_class = #{largeClass}
    <if test="id != null">
      AND id != #{id}
    </if>
  </select>
</mapper>